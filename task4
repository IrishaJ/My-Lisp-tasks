;;Треугольник паскаля
;;           1
;;         1   1
;;       1   2   1
;;     1   3   3   1
;;   1   4   6   4   1
;; 1   5   10  10  5   1  
;;Pascal's triangle
;;
;;Числа на краю – всегда единицы. Каждое число внутри треугольника это сумма двух чисел сверху.
;;
;;В файле pascal.rkt создайте процедуру, которая принимает координаты в виде пары чисел (строка и колонка) и вычисляет элементы Треугольника Паскаля с помощью рекурсивного процесса.
;;
;;Например, число на третьей строке и второй колонке – 2, так что вызов (pascal-triangle 3 2) должен возвращать 2.
#lang racket/base

(require rackunit)

;; BEGIN (write your solution here)
(define (f n)
    (if (< n 3) n
(+(f (- n 1)) (* 2 (f (- n 2))) (* 3 (f (- n 3))))))
;; END

(check-equal? (f 1) 1)
(check-equal? (f 2) 2)
(check-equal? (f 3) 4)
(check-equal? (f 4) 11)
(check-equal? (f 5) 25)
(check-equal? (f 6) 59)
(check-equal? (f 7) 142)
